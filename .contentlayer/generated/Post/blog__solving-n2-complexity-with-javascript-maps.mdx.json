{
  "title": "Solving N² Complexity with JavaScript Maps",
  "date": "2024-11-20T00:00:00.000Z",
  "category": "Development",
  "image": "/images/articles/performance.jpg",
  "description": "Learn how to transform inefficient nested loops into performant solutions using JavaScript Maps.",
  "timeToRead": 4,
  "body": {
    "raw": "\nAs developers, we often encounter situations where we need to find relationships between elements in different arrays. The immediate solution that comes to mind is usually nested loops, leading to O(n²) complexity. \nHowever, beyond poor performance, there’s a more serious problem: in high-traffic environments, an O(n²) algorithm can block the event loop and freeze your server. \n\nLet's explore a real-world example and see how we can dramatically improve performance using JavaScript Maps.\n\n## The N² Problem\n\nConsider this common scenario where we need to match users with their orders:\n\n```javascript\nconst users = [\n  { id: 1, name: 'Alice' },\n  { id: 2, name: 'Bob' },\n  // ... potentially thousands of users\n]\n\nconst orders = [\n  { userId: 1, product: 'Laptop' },\n  { userId: 2, product: 'Phone' },\n  // ... potentially thousands of orders\n]\n\n// Inefficient O(n²) solution\nconst getUserOrders = () => {\n  return users.map((user) => {\n    const userOrders = orders.filter((order) => order.userId === user.id)\n    return {\n      ...user,\n      orders: userOrders,\n    }\n  })\n}\n```\n\nWith this approach, for each user, we're scanning through the entire orders array. If we have 1,000 users and 1,000 orders, we're performing 1,000,000 comparisons!\n\n## The Bigger Problem: Blocking the Event Loop\n\nJavaScript runs on a single thread, meaning the event loop is responsible for processing all tasks, from handling HTTP requests to database queries. When a computationally expensive operation like an O(n²) loop takes too long, it blocks the event loop, causing the server to stop responding to incoming requests. This can result in:\n- Delayed Responses: Other users experience increased latency.\n- Server Freezes: Requests can time out, degrading the user experience.\n- Wasted Resources: In a microservices architecture, a frozen service may trigger cascading failures.\n\nThis is why solving O(n²) complexity isn’t just about optimizing performance—it’s about keeping your application responsive and stable.\n\n## The Map Solution\n\nHere's how we can solve this using a Map to achieve O(n) complexity:\n\n```javascript\nconst getUserOrdersEfficient = () => {\n  // Create a Map of orders indexed by userId\n  const orderMap = new Map()\n  orders.forEach((order) => {\n    if (!orderMap.has(order.userId)) {\n      orderMap.set(order.userId, [])\n    }\n    orderMap.get(order.userId).push(order)\n  })\n\n  // Now we can look up orders directly by userId\n  return users.map((user) => ({\n    ...user,\n    orders: orderMap.get(user.id) || [],\n  }))\n}\n```\n\n## Performance Comparison\n\nLet's look at the actual performance difference:\n\n```javascript\n// Test with larger datasets\nconst generateTestData = (size) => {\n  const users = Array.from({ length: size }, (_, i) => ({\n    id: i + 1,\n    name: `User${i + 1}`,\n  }))\n  const orders = Array.from({ length: size }, (_, i) => ({\n    userId: Math.floor(Math.random() * size) + 1,\n    product: `Product${i + 1}`,\n  }))\n  return { users, orders }\n}\n\nconst { users, orders } = generateTestData(10000)\n\nconsole.time('N² Solution')\ngetUserOrders()\nconsole.timeEnd('N² Solution')\n// N² Solution: ~500ms\n\nconsole.time('Map Solution')\ngetUserOrdersEfficient()\nconsole.timeEnd('Map Solution')\n// Map Solution: ~5ms\n```\n\n## Why Maps Are Better Here\n\n1. **Single Pass Processing**: We only need to iterate through each array once\n2. **O(1) Lookups**: Map provides constant-time access to stored values\n3. **Memory Efficient**: We're trading a small amount of memory for massive performance gains\n4. **Scalability**: Performance remains linear as data size grows\n\n## Best Practices for Using Maps\n\nWhen implementing this pattern, keep in mind:\n\n1. **Pre-size Your Maps**: If you know the size of your data, you can optimize memory allocation:\n\n```javascript\nconst orderMap = new Map()\norderMap.set(user.id, [])\n```\n\n2. **Clear References**: When you're done, clear the Map to help garbage collection:\n\n```javascript\norderMap.clear()\n```\n\n## Conclusion\n\nNext time you find yourself writing nested loops, stop and consider if a Map-based solution might be more appropriate. The small effort of restructuring your data can lead to dramatic performance improvements, especially as your datasets grow.\n\nRemember:\n\n- Nested loops are often a red flag for performance issues\n- Maps provide O(1) lookup time\n- O(n²) algorithms can block the event loop and freeze the server\n- The extra memory usage is usually worth the performance gain\n- Always measure performance with realistic data sizes\n\nBy making smart choices about data structures, we can write code that not only works but scales efficiently with our applications' growth.\n",
    "code": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var N=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),y=(a,n)=>{for(var s in n)c(a,s,{get:n[s],enumerable:!0})},r=(a,n,s,o)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of m(n))!k.call(a,t)&&t!==s&&c(a,t,{get:()=>n[t],enumerable:!(o=u(n,t))||o.enumerable});return a};var g=(a,n,s)=>(s=a!=null?d(h(a)):{},r(n||!a||!a.__esModule?c(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>r(c({},\"__esModule\",{value:!0}),a);var i=N((j,l)=>{l.exports=_jsx_runtime});var M={};y(M,{default:()=>b,frontmatter:()=>w});var e=g(i()),w={date:\"2024-11-20\",title:\"Solving N\\xB2 Complexity with JavaScript Maps\",category:\"Development\",image:\"/images/articles/performance.jpg\",description:\"Learn how to transform inefficient nested loops into performant solutions using JavaScript Maps.\",timeToRead:4};function p(a){let n=Object.assign({p:\"p\",h2:\"h2\",pre:\"pre\",code:\"code\",span:\"span\",ul:\"ul\",li:\"li\",ol:\"ol\",strong:\"strong\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:`As developers, we often encounter situations where we need to find relationships between elements in different arrays. The immediate solution that comes to mind is usually nested loops, leading to O(n\\xB2) complexity.\nHowever, beyond poor performance, there\\u2019s a more serious problem: in high-traffic environments, an O(n\\xB2) algorithm can block the event loop and freeze your server.`}),`\n`,(0,e.jsx)(n.p,{children:\"Let's explore a real-world example and see how we can dramatically improve performance using JavaScript Maps.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"The N\\xB2 Problem\"}),`\n`,(0,e.jsx)(n.p,{children:\"Consider this common scenario where we need to match users with their orders:\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" users \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"name\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'Alice'\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"name\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'Bob'\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// ... potentially thousands of users\"}),`\n`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n\n`,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" orders \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"product\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'Laptop'\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"product\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'Phone'\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// ... potentially thousands of orders\"}),`\n`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n\n`,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Inefficient O(n\\xB2) solution\"}),`\n`,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"getUserOrders\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" users\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"user\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" userOrders \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" orders\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"filter\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"order\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" order\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"userId\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"===\"}),\" user\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n      `,(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"user\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n      `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"orders\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" userOrders\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})}),`\n`,(0,e.jsx)(n.p,{children:\"With this approach, for each user, we're scanning through the entire orders array. If we have 1,000 users and 1,000 orders, we're performing 1,000,000 comparisons!\"}),`\n`,(0,e.jsx)(n.h2,{children:\"The Bigger Problem: Blocking the Event Loop\"}),`\n`,(0,e.jsx)(n.p,{children:\"JavaScript runs on a single thread, meaning the event loop is responsible for processing all tasks, from handling HTTP requests to database queries. When a computationally expensive operation like an O(n\\xB2) loop takes too long, it blocks the event loop, causing the server to stop responding to incoming requests. This can result in:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Delayed Responses: Other users experience increased latency.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Server Freezes: Requests can time out, degrading the user experience.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Wasted Resources: In a microservices architecture, a frozen service may trigger cascading failures.\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"This is why solving O(n\\xB2) complexity isn\\u2019t just about optimizing performance\\u2014it\\u2019s about keeping your application responsive and stable.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"The Map Solution\"}),`\n`,(0,e.jsx)(n.p,{children:\"Here's how we can solve this using a Map to achieve O(n) complexity:\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"getUserOrdersEfficient\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Create a Map of orders indexed by userId\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" orderMap \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n  orders`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"forEach\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"order\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\"!\"}),\"orderMap\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"has\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"order\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n      orderMap`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"set\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"order\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n    orderMap`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"get\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"order\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"push\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"order\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n\n  `,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Now we can look up orders directly by userId\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" users\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"user\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token spread operator\",children:\"...\"}),\"user\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"orders\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" orderMap\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"get\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"user\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"||\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})}),`\n`,(0,e.jsx)(n.h2,{children:\"Performance Comparison\"}),`\n`,(0,e.jsx)(n.p,{children:\"Let's look at the actual performance difference:\"}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Test with larger datasets\"}),`\n`,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token function-variable function\",children:\"generateTestData\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token parameter\",children:\"size\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" users \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"Array\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"from\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"length\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" size \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[\"_\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" i\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" i \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"name\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"User\"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"i \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" orders \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"Array\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token keyword module\",children:\"from\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"length\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" size \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(n.span,{className:\"token parameter\",children:[\"_\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" i\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token arrow operator\",children:\"=>\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"userId\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"Math\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"floor\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token known-class-name class-name\",children:\"Math\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"random\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"*\"}),\" size\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n    `,(0,e.jsx)(n.span,{className:\"token literal-property property\",children:\"product\"}),(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsxs)(n.span,{className:\"token template-string\",children:[(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"Product\"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"${\"}),\"i \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"1\"}),(0,e.jsx)(n.span,{className:\"token interpolation-punctuation punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token template-punctuation string\",children:\"`\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n  `,(0,e.jsx)(n.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" users\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" orders \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n\n`,(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\" users\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" orders \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"generateTestData\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"10000\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n\n`,(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"time\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'N\\xB2 Solution'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token function\",children:\"getUserOrders\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"timeEnd\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'N\\xB2 Solution'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// N\\xB2 Solution: ~500ms\"}),`\n\n`,(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"time\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'Map Solution'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token function\",children:\"getUserOrdersEfficient\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token console class-name\",children:\"console\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"timeEnd\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'Map Solution'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`,(0,e.jsx)(n.span,{className:\"token comment\",children:\"// Map Solution: ~5ms\"}),`\n`]})}),`\n`,(0,e.jsx)(n.h2,{children:\"Why Maps Are Better Here\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Single Pass Processing\"}),\": We only need to iterate through each array once\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"O(1) Lookups\"}),\": Map provides constant-time access to stored values\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Memory Efficient\"}),\": We're trading a small amount of memory for massive performance gains\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Scalability\"}),\": Performance remains linear as data size grows\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Best Practices for Using Maps\"}),`\n`,(0,e.jsx)(n.p,{children:\"When implementing this pattern, keep in mind:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Pre-size Your Maps\"}),\": If you know the size of your data, you can optimize memory allocation:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"const\"}),\" orderMap \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Map\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\norderMap`,(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"set\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"user\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token property-access\",children:\"id\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Clear References\"}),\": When you're done, clear the Map to help garbage collection:\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-javascript\",children:(0,e.jsxs)(n.code,{className:\"language-javascript\",children:[\"orderMap\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token method function property-access\",children:\"clear\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})}),`\n`,(0,e.jsx)(n.h2,{children:\"Conclusion\"}),`\n`,(0,e.jsx)(n.p,{children:\"Next time you find yourself writing nested loops, stop and consider if a Map-based solution might be more appropriate. The small effort of restructuring your data can lead to dramatic performance improvements, especially as your datasets grow.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Remember:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Nested loops are often a red flag for performance issues\"}),`\n`,(0,e.jsx)(n.li,{children:\"Maps provide O(1) lookup time\"}),`\n`,(0,e.jsx)(n.li,{children:\"O(n\\xB2) algorithms can block the event loop and freeze the server\"}),`\n`,(0,e.jsx)(n.li,{children:\"The extra memory usage is usually worth the performance gain\"}),`\n`,(0,e.jsx)(n.li,{children:\"Always measure performance with realistic data sizes\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"By making smart choices about data structures, we can write code that not only works but scales efficiently with our applications' growth.\"})]})}function v(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,Object.assign({},a,{children:(0,e.jsx)(p,a)})):p(a)}var b=v;return f(M);})();\n;return Component;"
  },
  "_id": "blog/solving-n2-complexity-with-javascript-maps.mdx",
  "_raw": {
    "sourceFilePath": "blog/solving-n2-complexity-with-javascript-maps.mdx",
    "sourceFileName": "solving-n2-complexity-with-javascript-maps.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/solving-n2-complexity-with-javascript-maps"
  },
  "type": "Post",
  "url": "/blog/solving-n2-complexity-with-javascript-maps",
  "slug": "solving-n2-complexity-with-javascript-maps"
}